@model Login
@{
    ViewData["Title"] = "Sign Up";
}

<h1 class="display-4 mb-4 pb-3 border-bottom">Sign Up</h1>

<div class="row">
    <div class="col-md-4">
        <form asp-action="SignUp">
            <div class="form-group mb-2">
                <label asp-for="LoginID" class="control-label"></label>
                <input asp-for="LoginID" class="form-control" />
                <span asp-validation-for="LoginID" class="text-danger"></span>
            </div>
            <div class="form-group mb-2">
                <label for="Password" class="control-label">Password</label>
                <input id="Password" name="Password" type="password" class="form-control"
                    data-val="true" data-val-required="The Password field is required." />
                @Html.ValidationMessage("Password", new { @class = "text-danger" })
                @Html.ValidationMessage("MatchPassword", new { @class = "text-danger"})
            </div>
            @* @Html.ValidationMessage("MatchPassword", new { @class = "text-danger"}) *@
            <div class="form-group mb-2">
                <label for="ConfirmPassword" class="control-label">Confirm Password</label>
                <input id="ConfirmPassword" name="ConfirmPassword" type="password" class="form-control"
                    data-val="true" data-val-required="Confirm password field is required." />
                @Html.ValidationMessage("ConfirmPassword", new { @class = "text-danger" })
                @Html.ValidationMessage("MatchPassword", new { @class = "text-danger"})
            </div>
            <div class="form-group mt-4">
                <input type="submit" value="SignUp" class="btn btn-primary" />
            </div>
            @Html.ValidationMessage("SignUpFailed", new { @class = "text-danger" })
        </form>
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
